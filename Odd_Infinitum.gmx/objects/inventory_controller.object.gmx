<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Instantiate Variables

box_width_left = room_width/2;
box_width_right = room_width/2;
box_width_left_final = 64;
box_width_right_final = room_width-64;

// Alignment Variables
laser_box_column = room_width/2-256;
alt_laser_box_column = room_width/2-96;
missile_box_column = room_width/2+96;
augment_box_column = room_width/2+256

// Menu
menu = inventory_states.main;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set Cursor
window_set_cursor(cr_default);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// States
enum inventory_states
{
    main,
    lasers,
    alt_lasers,
    missiles,
    augments,
    skins
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Clear Everything
clear_inventory_screen();

// Set Cursor
window_set_cursor(cr_none);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Select Screen

if (box_width_left &gt; box_width_left_final &amp;&amp; box_width_right &lt; box_width_right_final)
{
    // Draw Rectangles
    draw_rectangle_colour(box_width_left,64,box_width_right,room_height-64,c_ltgray,c_dkgray,c_dkgray,c_black, false);
    draw_rectangle_colour(box_width_left,64,box_width_right,room_height-64,c_ltgray,c_ltgray,c_ltgray,c_ltgray,true);
    box_width_left -= 64;
    box_width_right += 64;
}
else
{
    // Draw Rectangles
    draw_rectangle_colour(box_width_left_final,64,box_width_right_final,room_height-64,c_ltgray,c_dkgray,c_dkgray,c_black, false);
    draw_rectangle_colour(box_width_left_final,64,box_width_right_final,room_height-64,c_ltgray,c_ltgray,c_ltgray,c_ltgray,true);
    draw_rectangle_colour(128,128,room_width-128,room_height-128,c_black,c_black,c_black,c_black,false);
    
    // State Machine
    switch (menu)
    {
    case inventory_states.main:
        scr_inventory_main();
        break;
    case inventory_states.lasers:
        scr_inventory_laser();
        break;
    case inventory_states.alt_lasers:
        scr_inventory_alt_laser();
        break;
    case inventory_states.missiles:
        scr_inventory_missile();
        break;
    case inventory_states.augments:
        scr_inventory_augment();
        break;
    case inventory_states.skins:
        scr_inventory_skin();   
        break; 
    }   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
