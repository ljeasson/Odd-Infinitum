<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Dialogue Number
dialogue_number = 0;
dialogue_lock = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Step through dialogue

key_next = keyboard_check_pressed(vk_enter) || gamepad_button_check_pressed(0, gp_shoulderr);
key_skip = keyboard_check_pressed(vk_rcontrol) || gamepad_button_check_pressed(0, gp_shoulderl); 

// Increment Dialogue Number
if (key_next)
{
    instance_destroy(obj_dialogue_box);
    dialogue_lock = false;
    dialogue_number += 1;
}

// Skip All Dialogue
if (key_skip)
{
    instance_destroy(dialogue_Borris_Intro);
    instance_destroy(obj_dialogue_box);
}

//
switch (dialogue_number)
{
    case 0:
        if (!dialogue_lock) scr_dialogue_box("Laser Weapons are you primary means of defense,", "Borris", UI_Font_Medium);
        dialogue_lock = true;
        break;
    case 1:
        if (!dialogue_lock) scr_dialogue_box("and offense when necessary.", "Borris", UI_Font_Medium);
        dialogue_lock = true;
        break;
    case 2:
        if (!dialogue_lock) scr_dialogue_box("You can equip up to two laser weapons at once.", "Borris", UI_Font_Medium);
        dialogue_lock = true;
        break;
    case 3:
        if (!dialogue_lock) scr_dialogue_box("Currently, the Pilot Laser is equipped in both slots", "Borris", UI_Font_Medium);
        dialogue_lock = true;
        break;
    default:
        instance_destroy();
        break;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
