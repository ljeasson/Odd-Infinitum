<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Establish Client-Server Connection

// Network Type and Port number
var type = network_socket_udp;
var port = 3065;

// Create UDP server socket
socket = network_create_socket_ext(type, port);
// Error Check
if (socket &lt; 0)
    scr_text("UDP Sever Socket Error", 2, room_width/2, room_height/2);  // Error!
else
    scr_text("Friendly Pilot Summoned", 2, room_width/2, room_height/2);  // Success!

// Placeholders
remote_port = 0;
remote_ip = "0.0.0.0";

// Make buffer to hold packet data
var buffer_size = 1024;
var buffer_type = buffer_fixed;
var buffer_alignment = 1;
send_buffer = buffer_create(buffer_size, buffer_type, buffer_alignment);

//variables for drawing circles.
myx = room_width/2;
myy = room_width/2;
remotex = myx;
remotey = myy;

// Mark Player as Host
global.is_host = true;

if (room == room_overworld)
{
    // Create Remote Overworld Player
    var remote_player = instance_create(remotex,remotey,obj_Player_Overworld_Remote);
    remote_player.image_blend = c_aqua;
    
    // Update Player Number
    global.num_players += 1;
    
    // Enable Co-op
    global.coop = true;
}
else
{
    // Create Remote Player
    var remote_player = instance_create(remotex,remotey,obj_Player_Remote);
    remote_player.image_blend = c_aqua;
    // Create Remote UI
    instance_create(x,y,UI_controller_remote);

    // Update Player Number
    global.num_players += 1;
    
    // Enable Co-op
    global.coop = true;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update Position of Remote Fighter
if (instance_exists(obj_Player_Remote))
{
    obj_Player_Remote.x = remotex;
    obj_Player_Remote.y = remotey;
}
if (instance_exists(obj_Player_Overworld_Remote))
{
    obj_Player_Overworld_Remote.x = remotex;
    obj_Player_Overworld_Remote.y = remotey;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Wait to Receive Packet Data

// Get Port and IP of client
remote_port = async_load[? "port"];
remote_ip = string(async_load[? "ip"]);

// Get Buffer so that it can be processed
var buffer = async_load[? "buffer"];
buffer_seek(buffer, buffer_seek_start, 0);
process_packet(buffer);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw "HOST" Text
draw_set_colour(c_white);
draw_set_font(UI_Font_Large);
draw_set_halign(fa_center);
draw_text(room_width/2,room_height-64,"HOST");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
