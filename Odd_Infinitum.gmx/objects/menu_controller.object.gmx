<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Default menu option
interest = "Mission";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Take Input

// Pause Controls
var key_up = keyboard_check_pressed(vk_up) 
            || gamepad_button_check_pressed(0, gp_padu)
            || gamepad_axis_value(0, gp_axislv) &gt; 0;
            
var key_down = keyboard_check_pressed(vk_down) 
            || gamepad_button_check_pressed(0, gp_padd)
            || gamepad_axis_value(0, gp_axislv) &lt; 0;
            
var key_select = keyboard_check_pressed(vk_return)
            || gamepad_button_check_pressed(0, gp_face1);
  
                      
// Change Option with Keyboard Input          
if (key_up)
{
    if (interest == "Mission")
        interest = "Exit";
    else if (interest == "Exit")
        interest = "Mission";
}
if (key_down)
{
    if (interest == "Mission")
        interest = "Exit";
    else if (interest == "Exit")
        interest = "Mission";
}

if (key_select)
{
    if (interest == "Mission")
        room_goto(room_overworld);
    else if (interest == "Exit")
        game_end();
}
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Highlight Option
if (interest == "Mission")
{
    obj_Mission_Button.image_blend = c_aqua;
    obj_Quit_Button.image_blend = c_white;
}
else if (interest == "Exit")
{
    obj_Mission_Button.image_blend = c_white;
    obj_Quit_Button.image_blend = c_aqua;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Internet Connection status
draw_set_font(UI_Font_Medium);
draw_set_halign(fa_left);
draw_set_valign(fa_middle);

if (global.connected)
{
    draw_set_color(c_white);    
    draw_text(32, 32, "ONLINE");
}        
else
{
    draw_set_color(c_red);   
    draw_text(32, 32, "OFFLINE");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
