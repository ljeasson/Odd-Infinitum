<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Pause

// Take screenshot of current screen
screen_save("pause.png");

// Deactivate all instances and freeze gameplay
instance_deactivate_all(true);

// Add screenshot as a sprite
background = sprite_add("pause.png", 0, false, true, 0, 0);

// Default menu option
interest = "Continue";

// Pause all audio
audio_pause_all();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Unpause

// Delete Screenshot
if (file_exists("pause.png"))
    file_delete("pause.png");
 
// Acitvate All Instances   
instance_activate_all();

// Resume all audio
audio_resume_all();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Take Input

// Pause Controls
var key_up = keyboard_check_pressed(vk_up) 
            || gamepad_button_check_pressed(0, gp_padu)
            || gamepad_axis_value(0, gp_axislv) &gt; 0;
            
var key_down = keyboard_check_pressed(vk_down) 
            || gamepad_button_check_pressed(0, gp_padd)
            || gamepad_axis_value(0, gp_axislv) &lt; 0;
            
var key_select = keyboard_check_pressed(vk_return)
            || gamepad_button_check_pressed(0, gp_face1);
  
var key_exit = keyboard_check_pressed(vk_escape)
            || gamepad_button_check_pressed(0, gp_start);
                      
// Change Option with Keyboard Input          
if (key_up)
{
    if (interest == "Continue")
        interest = "Exit";
    else if (interest == "Options")
        interest = "Continue";
    else if (interest == "Restart")
        interest = "Options";
    else if (interest == "Exit")
        interest = "Restart";
}
if (key_down)
{
    if (interest == "Continue")
        interest = "Options";
    else if (interest == "Options")
        interest = "Restart";
    else if (interest == "Restart")
        interest = "Exit";
    else if (interest == "Exit")
        interest = "Continue";
}

if (key_select)
{
    if (interest == "Continue")
        instance_destroy();
    else if (interest == "Options")
        {} // TO BE ADDED LATER
    else if (interest == "Restart") 
    {
        if (file_exists("pause.png"))
            file_delete("pause.png");
        room_restart();
    }
    else if (interest == "Exit")
    {
        if (room == room_overworld) 
        {
            if (file_exists("pause.png"))
                file_delete("pause.png");
            room_goto(room_menu);
        }
        else
        {
            if (file_exists("pause.png"))
                file_delete("pause.png");
            room_goto(room_overworld);
        }
    }
}

if (key_exit)
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Delete Screenshot
if (file_exists("pause.png"))
    file_delete("pause.png");

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Pause Menu Background
draw_sprite(background,0,0,0);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Pause Menu

if (interest == "Continue")
{
    draw_sprite(spr_Continue, 1, room_width/2, room_height/2 - 75);
    draw_sprite(spr_Options, 0, room_width/2, room_height/2 - 25);
    draw_sprite(spr_Restart, 0, room_width/2, room_height/2 + 25);
    draw_sprite(spr_Exit, 0, room_width/2, room_height/2 + 75);
}
else if (interest == "Options")
{
    draw_sprite(spr_Continue, 0, room_width/2, room_height/2 - 75);
    draw_sprite(spr_Options, 1, room_width/2, room_height/2 - 25);
    draw_sprite(spr_Restart, 0, room_width/2, room_height/2 + 25);
    draw_sprite(spr_Exit, 0, room_width/2, room_height/2 + 75);
}
else if (interest == "Restart")
{
    draw_sprite(spr_Continue, 0, room_width/2, room_height/2 - 75);
    draw_sprite(spr_Options, 0, room_width/2, room_height/2 - 25);
    draw_sprite(spr_Restart, 1, room_width/2, room_height/2 + 25);
    draw_sprite(spr_Exit, 0, room_width/2, room_height/2 + 75);
}
else if (interest == "Exit")
{
    draw_sprite(spr_Continue, 0, room_width/2, room_height/2 - 75);
    draw_sprite(spr_Options, 0, room_width/2, room_height/2 - 25);
    draw_sprite(spr_Restart, 0, room_width/2, room_height/2 + 25);
    draw_sprite(spr_Exit, 1, room_width/2, room_height/2 + 75);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
